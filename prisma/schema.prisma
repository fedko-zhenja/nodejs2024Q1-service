// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String   @unique
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Favorite  Favorite[]

  // @@map("users")
}

model Artist {
  id     String  @id @default(uuid())
  grammy Boolean @default(false)
  name   String
  albums Album[]
  tracks Track[]

  // favorites Favorite[] @relation("FavoriteToArtist")

  // @@map("artists")
}

model Album {
  id       String  @id @default(uuid())
  year     Int
  name     String
  tracks   Track[]
  artistId String?
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)

  // favorites Favorite[] @relation("FavoriteToAlbum")

  // @@map("albums")
}

model Track {
  id       String  @id @default(uuid())
  name     String
  duration Int
  artistId String?
  albumId  String?
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  album    Album?  @relation(fields: [albumId], references: [id], onDelete: SetNull)

  // favorites Favorite[] @relation("FavoriteToTrack")

  // @@map("tracks")
}

model Favorite {
  favoriteId String @id @default(uuid())
  // artists    Artist[] @relation("FavoriteToArtist")
  // albums     Album[]  @relation("FavoriteToAlbum")
  // tracks     Track[]  @relation("FavoriteToTrack")
  // userId     String // Предполагается, что у каждого пользователя может быть свой список избранных, добавляем ссылку на пользователя
  // user       User     @relation(fields: [userId], references: [id])

  // @@map("favorites")
  // favoriteId String   @id @default(uuid())
  artists String[]
  albums  String[]
  tracks  String[]
}
